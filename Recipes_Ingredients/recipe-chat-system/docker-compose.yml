version: '3.8'

services:
  # PostgreSQL with pgvector
  postgres:
    build: ./database
    container_name: recipe_postgres
    environment:
      POSTGRES_DB: recipes_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      # Mount database initialization scripts
      - ./database:/docker-entrypoint-initdb.d
      # Persist data between container restarts
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # Changed to avoid conflict with our local PostgreSQL
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Ollama for Llama 3.2
  ollama:
    image: ollama/ollama:latest
    container_name: recipe_ollama
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    deploy:
      resources:
        limits:
          memory: 8G
    healthcheck:
      test: ["CMD-SHELL", "ollama list || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build: ./backend
    container_name: recipe_backend
    env_file: .env  # Use .env file
    environment:
      # Override for Docker networking
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/recipes_db
      OLLAMA_BASE_URL: http://ollama:11434
      SESSION_STORAGE: memory
      PYTHONUNBUFFERED: 1
    ports:
      - "8001:8000"  # Changed to avoid conflict with my local port 8000
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_healthy
    volumes:
      # For development - auto-reload on code changes
      - ./backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend UI
  frontend:
    build: ./frontend
    container_name: recipe_frontend
    env_file: .env  # Use .env file
    environment:
      # Override for Docker networking
      BACKEND_URL: http://backend:8000
      STREAMLIT_SERVER_ADDRESS: 0.0.0.0
      STREAMLIT_SERVER_PORT: 8501
    ports:
      - "8501:8501"
    depends_on:
      - backend
    volumes:
      # For development - auto-reload on code changes
      - ./frontend:/app

  # Model loader - runs once to download Llama 3.2
  model_loader:
    image: ollama/ollama:latest
    container_name: recipe_model_loader
    depends_on:
      ollama:
        condition: service_healthy
    volumes:
      - ollama_data:/root/.ollama
    network_mode: "service:ollama"  # Share network with ollama container
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        echo "Waiting for Ollama to be ready..."
        # Wait longer for Ollama to fully start
        sleep 20
        
        # Connect to localhost since we're sharing network
        export OLLAMA_HOST=http://localhost:11434
        
        echo "Checking Ollama status..."
        ollama list || echo "First check failed, waiting more..."
        sleep 5
        
        echo "Pulling Llama 3.2:3b model..."
        ollama pull llama3.2:3b || echo "3b variant failed"
        
        echo "Checking models..."
        ollama list
        echo "Model loader finished!"
volumes:
  postgres_data:
  ollama_data: